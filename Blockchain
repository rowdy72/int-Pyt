import hashlib
import time

class Block:
    def __init__(self, index, previous_hash, data):
        self.index = index
        self.timestamp = time.time()
        self.data = data
        self.previous_hash = previous_hash
        self.hash = self.calculate_hash()

    def calculate_hash(self):
        block_string = f"{self.index}{self.timestamp}{self.data}{self.previous_hash}"
        return hashlib.sha256(block_string.encode()).hexdigest()

# Create genesis block
genesis_block = Block(0, "0", "First Block")

# Create subsequent blocks
block2 = Block(1, genesis_block.hash, "Second Block")
block3 = Block(2, block2.hash, "Third Block")

# Print block details
for block in [genesis_block, block2, block3]:
    print(f"Block {block.index} - Hash: {block.hash} - Previous Hash: {block.previous_hash}")
